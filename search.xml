<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[JSON]]></title>
      <url>%2F2017%2F04%2F05%2FJSON%2F</url>
      <content type="text"><![CDATA[获取JSON数据(如OkHttp)1String jsonData = response.body().string; 使用JSONObject解析JSON1234567JSONArray jsonArray = new JSONArray(jsonData); for(int i = 0;i &lt; jsonArray.Length();i++)&#123; JSONObject jsonObject = jsonArray.getJSONObject(i); String xx = jsonObject.getString(“xx”); String yy = jsonObject.getString(“yy”);&#125; 使用Google官方出品的Gson库来解析12345678910111213//创建一个Person类Gson gson = new Gson();//一段JSON数据Person person = gson.fromJson(jsonData,Person.class);//一段JSON数组,则需要借助TypeToken将期望解析成的数据类型传入到fromJson()中List&lt;Person&gt; personList = gson.fromJson(jsonData,new TypeToken&lt;List&lt;Person&gt;&gt;()&#123;&#125;.getType());for(Person person:personList)&#123; String xx = person.getXx(); String yy = person.getYy(); ... &#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[okhttp]]></title>
      <url>%2F2017%2F04%2F05%2Fokhttp%2F</url>
      <content type="text"><![CDATA[官方介绍 Github 创建okhttp实例1OkHttpClient client = new OkHttpClient(); 构建request1234//getRequest request = new Request.Builder() .url(“xxxxx”) .build(); 12345678910//postRequestBody requestBody = new FormBody.Builder() .add(“key1”,”value1”) .add(“key2”,”value2”) .build();Request request = new Request.Builder() .url(“xxxxx”) .post(requestBody) .build(); 获取服务器返回的数据1234//同步Response response = client.newCall(request).execute();//服务器返回的数据:String responseData = response.body().string(); 123//异步client.newCall(request).enqueue(callback);//enqueue内部开启了子线程,重写OnResponse/OnFailure回调 最终的回调接口都在子线程中运行的,不能进行任何的UI操作借助runOnUiThread()方法进行线程的切换]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F04%2F04%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
