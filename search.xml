<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Markdown]]></title>
      <url>%2F2017%2F04%2F06%2FMarkdown%20%E8%AF%AD%E6%B3%95%2F</url>
      <content type="text"><![CDATA[一级标题二级标题三级标题四级标题五级标题六级标题多少个# 代表X级标题 void main (){ printf(&quot;hello world&quot;); } 代码块 斜体_斜体_ 强调__强调__ 1 2 3 4 一 二 三 啊啊 啊啊 啊啊 啊啊 四 分割线1 --- 分割线2 *** 分割线3 ___ 链接1百度链接1[百度](url) 链接2谷歌 链接2[谷歌][gg][gg]:url 图片1![alt text][url] 图片2 ![alt text][tag][tag]:url 反斜杠\使符号普通符号化 标记作用 回到顶部 #readme是&lt;a id&gt;xxx&lt;/&gt; 中的id 引用 一盏灯， 一片昏黄； 一简书， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。 &gt; 内容 表格 name gender age robert male 21 :在哪边 对齐哪边 两边都有就居中 1234| name | gender | age | | :--- | --:| :--:| |robert|male|21| |:在哪边|对齐哪边|两边都有就居中|]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[RecyclerView]]></title>
      <url>%2F2017%2F04%2F05%2FRecyclerView%2F</url>
      <content type="text"><![CDATA[添加依赖compile &#39;com.android.support:recyclerview-vxxxxx 准备数据源List&lt;Object&gt; datas 设置数据适配器 创建一个类继承RecyclerView.Adapter&lt;VH&gt; 构造函数中获取数据源 一个内部类继承RecyclerView.ViewHolder 构造函数获取传来的view中的组件 onCreateViewHolder方法中设置一个带布局的View并作为新的holder返回 12View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item,null);return new myHolder(view); onBindViewHolder方法中设置holder中的组件内容 1holder.textView.setText(mdata.get(position)); getItemCount方法返回数据源的大小 1return data.size(); 给recyclerView设置适配器1recyclerView.setAdapter(new myAdapter(datas));]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JSON]]></title>
      <url>%2F2017%2F04%2F05%2FJSON%2F</url>
      <content type="text"><![CDATA[获取JSON数据(如OkHttp)1String jsonData = response.body().string; 使用JSONObject解析JSON1234567JSONArray jsonArray = new JSONArray(jsonData); for(int i = 0;i &lt; jsonArray.Length();i++)&#123; JSONObject jsonObject = jsonArray.getJSONObject(i); String xx = jsonObject.getString(“xx”); String yy = jsonObject.getString(“yy”);&#125; 使用Google官方出品的Gson库来解析12345678910111213//创建一个Person类Gson gson = new Gson();//一段JSON数据Person person = gson.fromJson(jsonData,Person.class);//一段JSON数组,则需要借助TypeToken将期望解析成的数据类型传入到fromJson()中List&lt;Person&gt; personList = gson.fromJson(jsonData,new TypeToken&lt;List&lt;Person&gt;&gt;()&#123;&#125;.getType());for(Person person:personList)&#123; String xx = person.getXx(); String yy = person.getYy(); ... &#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[okhttp]]></title>
      <url>%2F2017%2F04%2F05%2Fokhttp%2F</url>
      <content type="text"><![CDATA[官方介绍 Github 创建okhttp实例1OkHttpClient client = new OkHttpClient(); 构建request1234//getRequest request = new Request.Builder() .url(“xxxxx”) .build(); 12345678910//postRequestBody requestBody = new FormBody.Builder() .add(“key1”,”value1”) .add(“key2”,”value2”) .build();Request request = new Request.Builder() .url(“xxxxx”) .post(requestBody) .build(); 获取服务器返回的数据1234//同步Response response = client.newCall(request).execute();//服务器返回的数据:String responseData = response.body().string(); 123//异步client.newCall(request).enqueue(callback);//enqueue内部开启了子线程,重写OnResponse/OnFailure回调 最终的回调接口都在子线程中运行的,不能进行任何的UI操作借助runOnUiThread()方法进行线程的切换]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F04%2F04%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
